"""Initial schemas

Revision ID: c299c0552f30
Revises:
Create Date: 2025-07-06 22:37:08.500628

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c299c0552f30"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "actions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "degree",
            postgresql.ENUM("NEUTRAL", "SUSPICIOUS", "TERRIBLE", name="action_degrees"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "apps",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("package", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("install_count", sa.Integer(), nullable=True),
        sa.Column(
            "type",
            postgresql.ENUM(
                "PRODUCTIVITY",
                "SHOPPING",
                "FOOD_DRINKS",
                "BOOKS_REFERENCES",
                "LIFESTYLE",
                "ENTERTAINMENT",
                "TOOLS",
                "BUSINESS",
                "MUSIC_AUDIO",
                "EDUCATION",
                "SOCIAL",
                "GAMES",
                "NEWS_MAGAZINES",
                "TRAVEL_LOCAL",
                name="app_type",
            ),
            nullable=True,
        ),
        sa.Column(
            "added_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("package"),
    )
    op.create_table(
        "operating_systems",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "IOS",
                "ANDROID",
                "WINDOWS",
                "MACOS",
                "LINUX",
                "CHROMEOS",
                name="os_types",
            ),
            nullable=False,
        ),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column(
            "ui",
            postgresql.ENUM(
                "STOCK",
                "ONEUI",
                "MIUI",
                "MAGICOS",
                "HARMONYOS",
                "COLOROS",
                "OXYGENOS",
                "HYPEROS",
                "REALMEUI",
                name="android_ui",
            ),
            nullable=True,
        ),
        sa.Column("ui_version", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "policies",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("is_whitelist_app", sa.Boolean(), nullable=True),
        sa.Column("is_whitelist_web", sa.Boolean(), nullable=True),
        sa.Column("targeted_user_type_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "regions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )

    op.create_table(
        "cities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("parent_region", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["parent_region"], ["regions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "devices",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "brand",
            postgresql.ENUM(
                "SAMSUNG",
                "APPLE",
                "XIAOMI",
                "VIVO",
                "OPPO",
                "REALME",
                "ASUS",
                "NOKIA",
                "ARTEL",
                "GOOGLE",
                "ONEPLUS",
                "NOTHING",
                "MOTOROLA",
                "REDMI",
                "POCO",
                "HUAWEI",
                "HONOR",
                "TECNO",
                name="phone_brands",
            ),
            nullable=True,
        ),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("os_id", sa.UUID(), nullable=False),
        sa.Column("ram", sa.Integer(), nullable=True),
        sa.Column("storage", sa.Integer(), nullable=True),
        sa.Column("IMEI", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["os_id"], ["operating_systems.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "districts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("parent_region", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["parent_region"], ["regions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "schools",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("region", sa.UUID(), nullable=False),
        sa.Column("city", sa.UUID(), nullable=False),
        sa.Column("district", sa.UUID(), nullable=False),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("latitude", sa.Numeric(precision=10, scale=8), nullable=True),
        sa.Column("longitude", sa.Numeric(precision=11, scale=8), nullable=True),
        sa.Column("location", sa.JSON(), nullable=True),
        sa.Column("radius", sa.Numeric(), nullable=True),
        sa.Column("policy_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["city"], ["cities.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["district"], ["districts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["policy_id"], ["policies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["region"], ["regions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_types",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_level", sa.Integer(), nullable=True),
        sa.Column("school", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["school"], ["schools.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_foreign_key(
        "fk_policies_targeted_user_type",
        "policies",
        "user_types",
        ["targeted_user_type_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_table(
        "websites",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("domain", sa.String(), nullable=False),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("visit_count", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column(
            "added_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("domain"),
    )

    op.create_table(
        "policy_apps",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("policy_id", sa.UUID(), nullable=False),
        sa.Column("app_id", sa.UUID(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["app_id"], ["apps.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["policy_id"], ["policies.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "policy_webs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("policy_id", sa.UUID(), nullable=False),
        sa.Column("website_id", sa.UUID(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["policy_id"], ["policies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["website_id"], ["websites.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("user_type_id", sa.UUID(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_type_id"], ["user_types.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "app_requests",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("app_id", sa.UUID(), nullable=False),
        sa.Column("from_user_id", sa.UUID(), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING", "APPROVED", "REJECTED", "ERROR", name="app_request_statuses"
            ),
            server_default="PENDING",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["app_id"], ["apps.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["from_user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "parent_infos",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("patronymic", sa.String(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column(
            "gender", postgresql.ENUM("FEMALE", "MALE", name="genders"), nullable=True
        ),
        sa.Column("passport_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "student_infos",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("patronymic", sa.String(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column(
            "gender", postgresql.ENUM("FEMALE", "MALE", name="genders"), nullable=True
        ),
        sa.Column("school", sa.UUID(), nullable=False),
        sa.Column(
            "shift", postgresql.ENUM("MORNING", "EVENING", name="shifts"), nullable=True
        ),
        sa.Column("father", sa.UUID(), nullable=True),
        sa.Column("mother", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["father"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["mother"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["school"], ["schools.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_devices",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("device_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["device_id"], ["devices.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_preferences",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "language",
            postgresql.ENUM(
                "UZB_LAT", "UZB_CYR", "RUSSIAN", "ENGLISH", name="languages"
            ),
            nullable=True,
        ),
        sa.Column(
            "theme",
            postgresql.ENUM("DARK", "LIGHT", "W_LIGHT", "W_DARK", name="themes"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_tasks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column(
            "priority",
            postgresql.ENUM("NEUTRAL", "IMPORTANT", "VITAL", name="priorities"),
            nullable=True,
        ),
        sa.Column("scheduled_to", sa.TIMESTAMP(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "app_requests_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("app_request_id", sa.UUID(), nullable=False),
        sa.Column(
            "status_was",
            postgresql.ENUM(
                "PENDING",
                "APPROVED",
                "REJECTED",
                "ERROR",
                name="app_request_status_was",
            ),
            nullable=False,
        ),
        sa.Column(
            "status_changed_to",
            postgresql.ENUM(
                "PENDING",
                "APPROVED",
                "REJECTED",
                "ERROR",
                name="app_request_status_changed_to",
            ),
            nullable=False,
        ),
        sa.Column("responsible_admin_id", sa.UUID(), nullable=True),
        sa.Column("basis", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["app_request_id"], ["app_requests.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["responsible_admin_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "setups",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("user_device_id", sa.UUID(), nullable=False),
        sa.Column("camera", sa.Boolean(), nullable=True),
        sa.Column("location", sa.Boolean(), nullable=True),
        sa.Column("usage_access", sa.Boolean(), nullable=True),
        sa.Column("admin_app", sa.Boolean(), nullable=True),
        sa.Column("accessibility_features", sa.Boolean(), nullable=True),
        sa.Column("pop_up", sa.Boolean(), nullable=True),
        sa.Column("notification_service", sa.Boolean(), nullable=True),
        sa.Column("battery_optimization", sa.Boolean(), nullable=True),
        sa.Column("gps", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_device_id"], ["user_devices.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_apps",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_device_id", sa.UUID(), nullable=False),
        sa.Column("app_id", sa.UUID(), nullable=False),
        sa.Column(
            "added_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["app_id"], ["apps.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["user_device_id"], ["user_devices.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_device_id", sa.UUID(), nullable=False),
        sa.Column("user_app_id", sa.UUID(), nullable=True),
        sa.Column("action_id", sa.UUID(), nullable=False),
        sa.Column(
            "done_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("details", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["action_id"], ["actions.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_app_id"], ["user_apps.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["user_device_id"], ["user_devices.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("logs")
    op.drop_table("user_apps")
    op.drop_table("setups")
    op.drop_table("app_requests_logs")
    op.drop_table("user_tasks")
    op.drop_table("user_preferences")
    op.drop_table("user_devices")
    op.drop_table("student_infos")
    op.drop_table("parent_infos")
    op.drop_table("app_requests")
    op.drop_table("users")
    op.drop_table("policy_webs")
    op.drop_table("policy_apps")
    op.drop_table("districts")
    op.drop_table("devices")
    op.drop_table("cities")
    op.drop_table("websites")
    op.drop_table("user_types")
    op.drop_table("schools")
    op.drop_table("regions")
    op.drop_table("policies")
    op.drop_table("operating_systems")
    op.drop_table("apps")
    op.drop_table("actions")
    # ### end Alembic commands ###
